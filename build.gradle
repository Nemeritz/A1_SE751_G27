/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

// Define the main class for the application
mainClassName = 'facegallery.FaceGallery'

def ptTools = files('lib/PTRuntime-1.0.0.jar')

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    compile 'com.google.cloud:google-cloud-vision:1.26.0'

    compile ptTools

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceSets {
    main.java.srcDirs = ['build/tmp/compileSrc']
}

task ptClean << {
    fileTree("src/pt/java").matching{ include "**/*.ptjava"}.each{ aFile ->
        file(aFile.getPath().replaceAll(".ptjava\$", ".java")).delete()
    }
}

task ptTranspile << {
    println "Transpiling PTJava files..."
    // Transpile with ParaTaskParser
	fileTree("src/pt/java").matching{ include "**/*.ptjava"}.each{ aFile ->
		javaexec {
		    classpath ptTools
            main 'pt.compiler.ParaTaskParser'
		    args aFile.absolutePath
		}
	}

    println "Copying PTJava output to compile directory..."
    // Copy the java source files
    copy {
        from("src/pt/java") {
            include "**/*.java"
        }

        into "build/tmp/compileSrc"

        includeEmptyDirs = false
    }
}

task compileSrcCopy << {
    println "Copying source files to compile directory... (Overwrites .ptjava)"

    copy {
        from("src/main/java") {
            include "**/*.java"
        }

        into "build/tmp/compileSrc"

        includeEmptyDirs = false
    }
}

task compileSrcClean << {
    println "Clearing temp src files..."

    delete "build/tmp/compileSrcsrc"
}

// srcCopy.dependsOn ptTranspile

compileSrcCopy.mustRunAfter compileSrcClean
compileSrcCopy.mustRunAfter ptTranspile

ptClean.mustRunAfter ptTranspile

ptTranspile.mustRunAfter compileSrcClean
ptTranspile.finalizedBy ptClean

compileJava.dependsOn compileSrcClean
compileJava.dependsOn ptTranspile
compileJava.dependsOn compileSrcCopy

clean.dependsOn ptClean
